// <auto-generated />
using System;
using DataPanda.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataPanda.Persistence.Migrations
{
    [DbContext(typeof(DataPandaDbContext))]
    [Migration("20210425085621_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataPanda.Domain.Entities.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FieldOfApplication")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Enrolment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("LearningPlatformId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LearningPlatformId");

                    b.ToTable("Enrolments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.FileSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StudentEnrolmentAssignmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentEnrolmentAssignmentId");

                    b.ToTable("FileSubmissions");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.LearningPlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LearningPlatforms");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.StudentEnrolment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EnrolmentId")
                        .HasColumnType("int");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnrolmentId");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentEnrolments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.StudentEnrolmentAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentEnrolmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentEnrolmentId");

                    b.ToTable("StudentEnrolmentAssignments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.StudentEnrolmentWiki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfEdits")
                        .HasColumnType("int");

                    b.Property<int>("StudentEnrolmentId")
                        .HasColumnType("int");

                    b.Property<int>("WikiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentEnrolmentId");

                    b.HasIndex("WikiId");

                    b.ToTable("StudentEnrolmentWikis");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Wiki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wikis");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Enrolment", b =>
                {
                    b.HasOne("DataPanda.Domain.Entities.Course", "Course")
                        .WithMany("Enrolments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataPanda.Domain.Entities.LearningPlatform", "LearningPlatform")
                        .WithMany("Enrolments")
                        .HasForeignKey("LearningPlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("LearningPlatform");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.FileSubmission", b =>
                {
                    b.HasOne("DataPanda.Domain.Entities.StudentEnrolmentAssignment", "StudentEnrolmentAssignments")
                        .WithMany("FileSubmissions")
                        .HasForeignKey("StudentEnrolmentAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentEnrolmentAssignments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.StudentEnrolment", b =>
                {
                    b.HasOne("DataPanda.Domain.Entities.Enrolment", "Enrolment")
                        .WithMany("StudentEnrolments")
                        .HasForeignKey("EnrolmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataPanda.Domain.Entities.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataPanda.Domain.Entities.Student", "Student")
                        .WithMany("StudentEnrolments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrolment");

                    b.Navigation("Grade");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.StudentEnrolmentAssignment", b =>
                {
                    b.HasOne("DataPanda.Domain.Entities.Assignment", "Assignment")
                        .WithMany("StudentEnrolmentAssignments")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataPanda.Domain.Entities.StudentEnrolment", "StudentEnrolment")
                        .WithMany("StudentEnrolmentAssignments")
                        .HasForeignKey("StudentEnrolmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("StudentEnrolment");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.StudentEnrolmentWiki", b =>
                {
                    b.HasOne("DataPanda.Domain.Entities.StudentEnrolment", "StudentEnrolment")
                        .WithMany("StudentEnrolmentWikis")
                        .HasForeignKey("StudentEnrolmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataPanda.Domain.Entities.Wiki", "Wiki")
                        .WithMany("StudentEnrolmentWikis")
                        .HasForeignKey("WikiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentEnrolment");

                    b.Navigation("Wiki");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Assignment", b =>
                {
                    b.Navigation("StudentEnrolmentAssignments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Course", b =>
                {
                    b.Navigation("Enrolments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Enrolment", b =>
                {
                    b.Navigation("StudentEnrolments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.LearningPlatform", b =>
                {
                    b.Navigation("Enrolments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Student", b =>
                {
                    b.Navigation("StudentEnrolments");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.StudentEnrolment", b =>
                {
                    b.Navigation("StudentEnrolmentAssignments");

                    b.Navigation("StudentEnrolmentWikis");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.StudentEnrolmentAssignment", b =>
                {
                    b.Navigation("FileSubmissions");
                });

            modelBuilder.Entity("DataPanda.Domain.Entities.Wiki", b =>
                {
                    b.Navigation("StudentEnrolmentWikis");
                });
#pragma warning restore 612, 618
        }
    }
}
